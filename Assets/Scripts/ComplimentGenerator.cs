using System.Collections.Generic;
using UnityEngine;

public class ComplimentGenerator : MonoBehaviour
{
    List<string> Combo5 = new List<string>
    {
     "5문제 연속 정답! 이 정도면 문제들이 저절로 풀리는 마법사 같아요!",
    "5문제를 연속으로 맞히다니, 혹시 머릿속에 계산기가 있나요?",
    "5문제 클리어! 이제 수학 문제들이 슬슬 당신을 두려워할지도 몰라요!",
    "5문제 연속 정답! 수학 왕좌에 한 발짝 더 다가섰어요!",
    "5문제 정복 완료! 혹시 수학 퀴즈계의 비밀 병기인가요?",
    "5문제 연속 정답이라니! 오늘은 대체 뭐든 다 될 것 같은 날이네요!",
    "5문제를 연속으로 맞히다니, 이젠 수학의 신도 당신을 주목하고 있어요!",
    "5문제 퍼펙트 클리어! 이 기세라면 수학 교과서를 다시 쓸 날이 오겠어요!",
    "5문제 연속 정답! 문제들도 이제 당신에게는 도전하기 힘들겠네요!",
    "5문제 연속 성공! 혹시 오늘, 수학 천재 모드가 활성화된 건가요?"
    };
    List<string> Combo10 = new List<string>
{
    "10문제 연속 정답! 이건 그냥 천재 인증입니다. 축하드려요!",
    "10문제를 연속으로? 이제 수학 문제들이 도망가고 싶어 할 거예요!",
    "10문제 퍼펙트 클리어! 혹시 오늘 수학의 전설이 될 준비 중인가요?",
    "10문제 연속 정답이라니! 이젠 문제를 풀지 말고 만들어보는 건 어때요?",
    "10문제 클리어! 수학의 신이 당신을 제자로 삼고 싶어한다는 소문이...",
    "10문제 연속 성공! 계산기도 당신에게 배우고 싶어 할 것 같아요!",
    "10문제 정답! 수학 왕관이 어울리는 사람은 당신밖에 없어요!",
    "10문제 연속 클리어! 이젠 당신이 문제를 디자인해도 될 듯해요!",
    "10문제 연속 정답이라니, 이건 그야말로 수학계의 역사적 순간입니다!",
    "10문제 완벽 정답! 문제들도 이제 '우리 졌어요'라고 말하고 있을 거예요!"
};
    List<string> Combo15 = new List<string>
{
      "15문제 연속 정답! 이제 수학이 당신에게 졌다고 선언할 때가 됐어요!",
    "15문제를 한 번에?! 혹시 비밀리에 천재 인증서를 받으셨나요?",
    "15문제 퍼펙트 클리어! 이젠 수학계의 전설로 불려도 부족함이 없겠어요!",
    "15문제 연속 정답이라니, 문제들이 이제 당신 앞에서 숨을 죽이고 있대요!",
    "15문제 클리어! 이 정도 실력이라면 계산기보다 빠를지도 몰라요!",
    "15문제를 연속으로 풀어내다니! 이젠 새로운 기록에 도전할 시간이에요!",
    "15문제 연속 정답! 문제들이 두 손 두 발 다 들었대요. 축하합니다!",
    "15문제 성공! 혹시 당신, 오늘 수학의 신에게 초대받은 건 아닌가요?",
    "15문제를 연속으로? 이제 '수학 마스터'라는 별명이 어울리겠어요!",
    "15문제 연속 정답! 이 기세라면 수학이 당신을 연구하기 시작할 거예요!"
};


    List<string> Accuracy5 = new List<string>
{   "모든 문제를 맞히다니! 이건 그냥 천재 그 자체!",
    "완벽한 클리어! 수학의 신도 감탄하며 박수를 치고 있을 거예요!",
    "모든 문제 정복 완료! 혹시 오늘 기분 좋게 수학을 끝내려고 마음먹었나요?",
    "100% 성공이라니! 문제들이 이제 당신을 스승님으로 모셔야겠어요.",
    "모든 문제 정답! 혹시 답을 미리 알고 계신 건 아니죠?",
    "완벽한 점수 달성! 이젠 수학 책이 당신 이름으로 재발행될지도 몰라요.",
    "모든 문제를 맞추다니! 이제 수학이 당신에게 졌다고 선언했어요.",
    "수학 클리어! 이 정도면 수학과 계약이라도 맺은 것 같아요!",
    "모든 문제 완벽 정답! 혹시 외계에서 온 수학 천재인가요?",
    "모든 문제 클리어! 축하합니다, 수학 역사에 새로운 한 페이지를 쓰셨습니다!",
    "완벽한 결과! 문제들도 ‘우린 이제 더 이상 도전하지 않겠어’라고 말했어요.",
    "모든 문제 정답! 수학이 당신 덕분에 새롭게 빛나고 있어요!",
    "100% 정답률! 이건 그냥 아무나 못하는 일이죠. 정말 대단해요!",
    "모든 문제 성공! 문제를 푸는 게 아니라 그냥 부숴버린 느낌인데요?",
    "수학 퀴즈 정복! 혹시 이제 다른 분야로 진출하실 계획인가요?",
    "모든 문제 정답! 이건 수학 퀴즈계의 완벽한 승리입니다.",
    "클리어! 이젠 ‘수학 전설’이라는 별명이 필요할 것 같아요.",
    "완벽한 결과 달성! 이 정도면 문제들이 도망갈 수도 있겠어요.",
    "모든 문제 정답! 수학의 신조차 ‘내가 졌다!’라고 인정했어요.",
    "100% 정답! 혹시 이게 사람의 한계인가요? 대단해요!"
};
    List<string> Accuracy4 = new List<string>
{    "대부분 맞혔어요! 조금 더 하면 완벽에 가까워질 것 같아요!",
    "멋진 결과! 이제 거의 완벽에 도달했어요. 다음 도전을 기대할게요!",
    "대부분 정답! 약간의 미세 조정만 더하면 수학 천재로 등극 가능!",
    "좋은 성과! 한 발 더 나아가면 완벽한 점수가 기다리고 있어요.",
    "대부분 정답이라니, 이제 완벽까지는 단 한 문제 차이일지도 몰라요!",
    "훌륭해요! 완벽은 아니지만 충분히 대단한 결과예요.",
    "대부분 맞혔어요! 다음번엔 ‘모두 맞히기’를 목표로 달려볼까요?",
    "수학 천재까지 딱 한 걸음! 대부분 맞혔으니 자신감을 가지세요!",
    "대부분 성공! 틀린 건 잠깐 실수일 뿐, 실력은 분명 훌륭해요!",
    "훌륭한 도전이었어요! 다음에는 완벽에 도전해보는 거 어때요?",
    "대부분 정답! 조금 아쉬운 결과지만, 실력은 확실히 보였어요.",
    "멋진 결과! 완벽한 정답률까지는 시간 문제 같아요.",
    "대부분 정답! 다음 번엔 실수 없이 모두 정복할 수 있을 거예요.",
    "대단해요! 조금 더 연습하면 문제들도 두려워할 것 같아요.",
    "대부분 맞히다니, 정말 놀라워요! 한 단계 더 올라갈 준비되셨죠?",
    "멋져요! 틀린 건 다음 도전을 위한 작은 힌트일 뿐이에요.",
    "훌륭해요! 틀린 몇 문제도 다음번엔 문제없을 거예요.",
    "대부분 정답! 실수는 있었지만, 수학 근육은 확실히 자라고 있어요!",
    "아주 좋아요! 완벽에 거의 가까운 도전이었어요.",
    "대부분 성공! 틀린 건 그냥 오늘의 재미라고 생각해요!"
};
    List<string> Accuracy3 = new List<string>
{"몇 문제는 놓쳤지만, 좋은 시도였어요! 다음엔 더 잘할 수 있을 거예요!",
    "어느 정도 성공! 아쉬운 부분은 연습하면 금방 따라잡을 수 있어요.",
    "좋은 시작이에요! 틀린 문제는 배움을 위한 기회일 뿐이에요.",
    "몇 문제는 틀렸지만 괜찮아요! 천천히 완벽을 향해 가는 중이니까요.",
    "어느 정도 맞췄어요! 조금 더 노력하면 금방 완벽해질 거예요.",
    "괜찮아요! 이번 도전은 연습의 일부일 뿐이에요. 한 걸음 더 나아가 봐요!",
    "조금 아쉬웠지만, 꾸준히 하면 멋진 결과를 낼 거예요!",
    "좋아요! 틀린 문제는 더 배우기 위한 힌트라고 생각해요.",
    "좋은 도전이었어요! 다음엔 더 나은 결과를 위해 한 번 더 시도해봐요!",
    "몇 개 틀렸지만 괜찮아요! 중요한 건 앞으로의 도전이에요.",
    "아직 완벽하진 않지만, 실력은 꾸준히 늘고 있어요. 조금만 더 힘내요!",
    "괜찮아요, 틀린 문제는 성공으로 가는 디딤돌이에요.",
    "이번엔 약간의 실수가 있었지만, 성장 가능성이 더 커 보여요!",
    "어느 정도 성공! 완벽까지 조금 남았으니, 다음 번엔 더 잘할 수 있을 거예요.",
    "좋아요! 수학은 연습의 반복이니까, 오늘도 한 걸음 나아갔어요!",
    "몇 문제는 틀렸지만, 도전 자체가 이미 대단한 거예요!",
    "이번엔 조금 아쉬웠지만, 성장은 틀림없어요! 포기하지 마세요!",
    "좋은 성과예요! 이번 실수는 다음번 성공의 열쇠가 될 거예요.",
    "조금 부족했지만, 충분히 잘했어요! 꾸준히 노력하는 모습이 멋져요.",
    "괜찮아요, 모두가 처음엔 완벽하지 않아요. 오늘도 멋진 시도였어요!"
};
    List<string> Accuracy2 = new List<string>
{
   "조금만 맞췄지만 괜찮아요! 시작이 반이니까요.",
    "이번엔 조금 아쉬웠지만, 연습하면 분명 더 잘할 거예요!",
    "잘했어요! 틀린 문제는 더 배울 기회일 뿐이에요.",
    "조금 부족했지만, 중요한 건 도전했다는 거예요. 멋져요!",
    "몇 문제 맞췄어요! 다음 번엔 더 나은 결과를 기대할게요!",
    "조금 어려웠나요? 괜찮아요! 실수는 성장의 한 과정이에요.",
    "좋은 시도였어요! 틀린 부분은 더 나아질 수 있는 기회랍니다.",
    "괜찮아요! 한 걸음씩 천천히 가면 결국 목표에 도달할 거예요.",
    "조금만 맞췄지만, 이제 방향을 알았으니 더 잘할 수 있을 거예요!",
    "조금 부족해도 괜찮아요. 중요한 건 학습을 포기하지 않는 거예요!",
    "잘했어요! 이제 조금 더 연습하면 새로운 기록에 도전할 수 있어요.",
    "조금만 맞췄지만, 이게 다 성공으로 가는 과정이에요!",
    "이번엔 어려웠죠? 하지만 틀린 문제도 곧 익숙해질 거예요.",
    "괜찮아요! 배움은 반복의 힘으로 완성되는 거니까요.",
    "잘했어요! 오늘의 실수는 내일의 성공을 위한 디딤돌이에요.",
    "이번엔 조금 힘들었죠? 그래도 계속 도전하는 모습이 멋져요!",
    "조금 아쉽지만, 중요한 건 앞으로 더 나아질 기회가 있다는 거예요.",
    "몇 문제 맞추지 못했지만, 이미 첫 걸음을 떼었으니 절반은 성공이에요!",
    "수학이 조금 어려웠죠? 그래도 도전한 당신이 대단해요!",
    "조금 아쉬운 결과지만, 꾸준히 하다 보면 분명 큰 성장을 이룰 거예요!"
};
    List<string> Accuracy0 = new List<string>
{
 "모든 문제를 틀리다니! 이건 진짜 새로운 경지예요. 수학의 신도 놀랐을걸요?",
    "모든 문제를 틀렸어요! 혹시 일부러 틀린 거라면 천재의 깊은 의도가 있는 건가요?",
    "와우, 정답을 피하는 스킬이 아주 놀라워요. 이 정도면 새로운 게임룰이 필요해요!",
    "전설의 기록 달성! 문제들조차 ‘이건 예상 못 했는데?’ 하고 놀랐을 거예요.",
    "하나도 맞추지 않다니! 혹시 계산기랑 싸운 거 아니죠?",
    "수학도 당신의 창의성에 감탄 중이에요. 모두 틀리기, 사실 엄청 어려운 거 알아요?",
    "모든 문제를 틀리다니! 이건 일종의 예술이에요. 수학계의 피카소 등장!",
    "100% 오답률! 이건 어쩌면 새로운 분야에 도전하라는 우주의 메시지일지도 몰라요.",
    "모두 틀렸어요! 괜찮아요, 이제부터는 올라갈 일만 남았어요!",
    "틀리기 올킬! 이건 분명히 수학의 새로운 가능성을 보여주는 혁명이에요!"
};



    public string GetRandomCombo(int comboType)
    {
        switch (comboType)
        {
            case 5:
                return Combo5[Random.Range(0, Combo5.Count)];
            case 10:
                return Combo10[Random.Range(0, Combo10.Count)];
            case 15:
                return Combo15[Random.Range(0, Combo15.Count)];
            default:
                return "Invalid combo type";
        }
    }

    string GetRandomAccuracyMessage(int accuracyLevel)
    {
        switch (accuracyLevel)
        {
            case 5:
                return Accuracy5[Random.Range(0, Accuracy5.Count)];
            case 4:
                return Accuracy4[Random.Range(0, Accuracy4.Count)];
            case 3:
                return Accuracy3[Random.Range(0, Accuracy3.Count)];
            case 2:
                return Accuracy2[Random.Range(0, Accuracy2.Count)];
            case 0:
                return Accuracy0[Random.Range(0, Accuracy0.Count)];
            default:
                return "잘못된 정확도 수준입니다.";
        }
    }

    public  string GetAccuracyMessage(int totalQuestions, int incorrectQuestions)
    {
        // 정확도 계산
        float accuracy = (totalQuestions - incorrectQuestions) / (float)totalQuestions * 100;

        // 정확도 수준 계산
        int accuracyLevel = 0;

        if (accuracy == 100)
        {
            accuracyLevel = 5;  // 다 맞은 경우
        }
        else if (accuracy >= 80)
        {
            accuracyLevel = 4;  // 80% 이상 맞은 경우
        }
        else if (accuracy >= 60)
        {
            accuracyLevel = 3;  // 60% 이상 맞은 경우
        }
        else if (accuracy >= 40)
        {
            accuracyLevel = 2;  // 40% 이상 맞은 경우
        }
        else
        {
            accuracyLevel = 0;  // 다 틀린 경우
        }

        // 정확도 메시지 반환
        return GetRandomAccuracyMessage(accuracyLevel);
    }

}
